Team Name: "Team NoSQL"
Team Members: "Abhinav Singh, Jake Veazey"
Initial Decisions:
   Language: "Java"
   Environment: "CLI"
Notes on Internal Architecture:
   - "Created a seperate java object called 'studentObj' which had all the requried attributes per student as individial objects. This allowed for quick access and look up in each student."
      - "We did this because it allowed for fast access, ease in code, and created an easy way to store information"
   - "After creating an object for each student in the begining of the program, all student objects were added to an array list"
      - "We did this because it allowed for ease in code, and an easy way to iterate (scan) through the objects and add to the list when needed"
Task Log:
   - Abhinav:
      - Created the initail StudentSearch.java file wrote the switch statement and grabbed user input (Start: 3:20pm - 3:50pm, 9-21-18,  30 mins) 
      - Wrote the code for the odd numbered requirements (Start: x:xx - y:yy, 9-2x-18, zz mins)
      - Wrote test suite (Start: x:xx - y:yy, 9-2x-18, zz mins)
      - Bug fixes and cleanup (Start: x:xx - y:yy, 9-2x-18, zz mins)

   - Jake
      - Created the Student Object class, parsed the text passed in, stored the data (Start: 3:20pm - 3:50pm, 9-21-18, 30 mins) 
      - Populated list with objects (Start: 1:00 - 1:10, 9-24-18, 10 mins)
      - Write the code for the even numbered requirements (Start: 1:10 - 1:50, 9-24-18, 40 mins)
      - Wrote writeup (Start: 1:10 - 1:30, 9-26-18, 10 mins)
      - Bug fixes and cleanup (Start: 1:30 - 2:00, 9-26-18, 30 mins)
Notes on testing:
   - Bug Log:
      - Jake (9-24-18): Compile issues - variables not initiated correctly due to spelling errors and placement. Bugs with printing and finding symbols.(5 min)
      - Abhinav (9-25-18): E1 issue - noticed that Jake had not implimented E1 for R10.
         - Jake fixed with print statement. (1 min)

Final Notes:
   - N/A
